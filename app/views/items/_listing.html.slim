turbo-frame#items
  h4 = t(".header")

  = render "alerts"

  - if @items.present?
    .mb-3: strong
      =  t(".stats.no_of_items", count: @no_of_items)
      =< t(".stats.no_of_available_items", count: @no_of_available_items)
      =< t(".stats.no_of_hold_requests", count: @hold_requests.count)

    - content_for :hold_request_panel do
      - if current_user
        - if @user_hold_requests.present?
          .mb-0: strong = t(".hold_requests_available_info", count: @hold_requests.count)

          table.table.align-middle.mb-3
            thead: tr
              th(scope="col") = t(".hold_requests.header.requested_at")
              th(scope="col") = t(".hold_requests.header.status")
              th(scope="col") = t(".hold_requests.header.queue_position")
              th(scope="col") = ""
            tbody
              - @user_hold_requests.each do |hr|
                tr
                  td = l(hr.requested_at.to_date)
                  td = t(".hold_requests.status.#{hr.status}", default: "–")
                  td
                    - if hr.status != :on_hold_shelf
                      = hr.queue_position
                    - else
                      = t(".hold_requests.ready_for_pickup")
                  td.text-end = link_to record_hold_request_path(record_id: @record.id, id: hr.id, search_scope: current_search_scope), class: "btn btn-sm btn-danger", data: { turbo_method: "delete", turbo_confirm: t(".confirm_delete_hold_request") } do
                    = t(".delete_hold_request")
        - elsif @can_perform_hold_request
          .mb-2 = t(".hold_request_info")
          = link_to record_hold_requests_path(record_id: @record.id, search_scope: current_search_scope), class: "btn btn-primary", data: {turbo_method: :post, turbo_confirm: t(".confirm_create_hold_request")} do
              = t(".create_hold_request")
        - else
          / hold request not possible. Show nothing for now.
      - else
        div: em = t(".login_required")

    - if content_for? :hold_request_panel
      .mb-3.bg-light.p-2
        = content_for :hold_request_panel

    - if @items.any?(&:closed_stack_orderable?)
      div
        i.fa-solid.fa-info-circle.fa-lg.text-warning
        em ==< t(".closed_stack_order_info")

    table.table.align-middle.mb-0
      thead: tr
        th(scope="col") = t(".items.header.call_number")
        th(scope="col") = t(".items.header.policy")
        th(scope="col") = t(".items.header.location")
        th(scope="col") = t(".items.header.status")
      tbody
        - @items.each do |item|
          tr
            td = item.call_number || "–"
            td = item.policy&.label || "–"
            td = item.location&.label || "–"
            td
              - if code = item.process_type&.code&.downcase
                ruby:
                  status = t(
                    "code_tables.process_types.#{code}",
                    default: (item.process_type.label || "–")
                  )
                = status

                - if item.due_date
                  div: em = t(".due_date_info", due_date: l(item.due_date.to_date))
              - else
                = t("code_tables.process_types.default")

                - if item.reshelving_time
                  div: em = t(".reshelving_info", time: l(item.reshelving_time.to_time, format: :only_time))

                - if item.closed_stack_orderable?
                  div = link_to new_closed_stack_order_path(m1: item.call_number), target: "_blank", class: "btn btn-primary btn-sm" do
                    = t(".closed_stack_order")
  - else
    .alert.alert-info.mb-0 = t(".no_items_message")
