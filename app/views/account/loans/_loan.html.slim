- renew_result = local_assigns.fetch(:renew_result) { nil }
- allow_single_renew = local_assigns.fetch(:allow_single_renew) { false }

- if renew_result
  .alert.alert-dismissible.animate__animated.animate__flipInX(class="#{renew_result.success ? "alert-success" : "alert-danger"}" role="alert")
    - if renew_result.success
      i.far.fa-check-circle.fa-lg
    - else
      i.fas.fa-ban.fa-lg
    span.ms-2 = renew_result.message
    button(type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close")

.row
  .col-md-8.col-xl-9
    .d-flex.flex-row.align-items-start
      .mb-3.mb-md-0
        - if loan.fine > 0
          span.mb-3.me-1.badge.bg-danger.text-light = t(".fines", fines: number_to_currency(loan.fine, unit: "€"))
        - if loan.is_resource_sharing_loan
          span.mb-3.me-1.badge.bg-primary.text-light = t(".resource_sharing_loan")
        - if renew_result.nil? && !loan.renewable
          span.mb-3.badge.bg-warning.text-dark = t(".not_renewable")

        .fs-5
          = link_to record_path(loan.record_id, search_scope: "local"), target: "_blank" do
            = loan.title.presence || "n.n."

        - author_and_yop = [loan.author.presence, loan.year_of_publication.presence].compact
        - if author_and_yop.any?
          .mt-0 = author_and_yop.join("; ")

        - if loan.barcode.present?
          .mt-0 = t(".barcode", barcode: loan.barcode)
        - else
          .mt-0 = t(".barcode", barcode: "–")

      .ms-auto
        - if allow_single_renew && loan.renewable
          .ms-2
            button.btn.btn-sm.btn-outline-primary.text-nowrap(
              data-action="click->loan#renew"
              data-loan-target="renewButton"
            )
              i.fas.fa-redo
            i.ms-2.fas.fa-spinner.fa-pulse(
              data-loan-target="renewSpinner"
              style="display: none;"
            )

  .col-md-4.col-xl-3.order-md-first
    - past_due_date = loan.due_date.past?
    dl.mb-0
      dt = t(".due_date")
      dd(class="#{past_due_date ? "text-danger" : "text-success"}")
        - if past_due_date
          i.me-1.fas.fa-exclamation-triangle
        - else
          i.me-1.fas.fa-calendar-check
        = l(loan.due_date.to_date)
        - unless past_due_date
          .fst-italic = distance_of_time_in_words(Time.zone.now, loan.due_date)
      dt = t(".loan_date")
      dd.mb-0 = l(loan.loan_date.to_date)
