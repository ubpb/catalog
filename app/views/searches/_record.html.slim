ruby:
  enable_availability = local_assigns.fetch(:enable_availability) { false } &&
                        show_availability?(record, search_scope: current_search_scope)
  enable_watch_lists_panel = local_assigns.fetch(:enable_watch_lists_panel) { false }
  enable_fulltext_links = local_assigns.fetch(:enable_fulltext_links) { false }

.d-flex(
  data-availabilities-target="record"
  data-record-id=record.id
  data-availabilities-enabled=enable_availability
)
  div.align-self-start.text-center.text-muted.me-3(style="width: 55px; min-width: 55px; position: relative")
    / Cover Image
    div.fa-regular.fa-file.fa-3x.bg-light.w-100.p-2.pt-3.pb-3.rounded
    - isbn = record.additional_identifiers.select{|i| i.type == :isbn}.first&.value&.gsub("-", "")
    - if isbn
      = image_tag(cover_image_url(isbn, size: "s"), style: "position: absolute; left:0; top:0", class: "img-fluid rounded")
  div
    / Title
    h5.mb-0
      = link_to record.title, show_record_path(record, search_request: @search_request)

    / Part of...
    = optional_value(record.is_part_of) do |is_part_of|
      ruby:
        links = is_part_of.map do |p|
          if p.id.present?
            sr_to_superorder = SearchEngine::SearchRequest.parse("sr[q,ids]=#{p.id}")
            sr_to_volumes    = SearchEngine::SearchRequest.parse("sr[q,superorder_id]=#{p.id}&sr[s,asc]=volume")

            link_to_superorder = link_to p.label, new_search_request_path(sr_to_superorder)
            link_to_volumes    = link_to t(".all_volumes"), new_search_request_path(sr_to_volumes)

            "#{link_to_superorder} (#{link_to_volumes})"
          else
            p.label
          end
        end
      span.me-2.fst-italic = links.join(", ").html_safe

    / Creators
    - if record.creators.present?
      / TODO: Remove filter after this is handled in normalization
      - creators = record.creators
      - creators = creators.reject{|c| c.relationships.any?{|r| r == "pbl"}}
      .mb-0 = render(CreatorComponent.with_collection(creators))

    / Year of publication
    - if (yop = record.year_of_publication).present?
      .mb-0 = yop

    / Journal stock
    - if record.journal_stocks.present?
      ruby:
        journal_stocks = record.journal_stocks.map do |js|
          [js.label_prefix, js.label].join(" ")
        end
      .mb-0
        = "Zeitschriftenbestand: #{journal_stocks.join("; ")}"

    / Links
    - if enable_fulltext_links
      - fl = record.fulltext_links.first
      - rl = record.resolver_link
      - if fl || rl
        div
          - if fl
            = link_to fl.url, target: "_blank" do
              i.fas.fa-external-link
              =< t(".online_resource.direct_link")
          - elsif rl
            - if rl.fulltext_available
              = link_to rl.url, target: "_blank" do
                i.fas.fa-external-link
                =< t(".online_resource.direct_link")
            - else
              = link_to rl.url, target: "_blank" do
                i.fas.fa-external-link
                =< t(".online_resource.resolver_link")

    / Call numbers
    - if record.call_numbers.present?
      div
        = "Signatur:"
        ==< record.call_numbers.map{|cn| link_to(cn, go_item_call_number_info_path)}.join(", ")


    / Availability
    - if enable_availability
      .mt-2(data-availabilities-output)
        i.fas.fa-sm.fa-spinner.fa-pulse

  - if enable_watch_lists_panel
    .ms-auto
      ruby:
        watch_lists_panel_component = WatchListsPanelComponent.new(
          user: current_user,
          search_scope: current_search_scope,
          record_id: record.id
        )
      .ms-2 = render(watch_lists_panel_component)
