.card.card-shadowed
  .card-header
    h5.m-0 = t(".header")

  - if hold_requests.present?
    #holdRequestsListing.ul.list-group.list-group-flush
      - hold_requests.each do |hold_request|
        li.list-group-item
          .d-flex
            .w-25
              dl.mb-0
                dt = t(".requested_at")
                dd = l(hold_request.requested_at)
                dt = t(".status")
                dd = t("code_tables.hold_request_status.#{hold_request.status}", default: hold_request.status)
                - if hold_request.status == :on_hold_shelf
                  dt = t(".expiry_date")
                  dd = hold_request.expiry_date ? l(hold_request.expiry_date) : "–"
                - else
                  dt = t(".queue_position")
                  dd = hold_request.queue_position
            .w-75.ms-3
              - if hold_request.status == :on_hold_shelf
                  strong.text-success
                    i.fa-solid.fa-info-circle
                    =< t(".on_hold_shelf_info", date: (hold_request.expiry_date ? l(hold_request.expiry_date) : "–"))

              div: strong
                - title = hold_request.title.presence || "n.n."
                - if (record_id = hold_request.record_id).present?
                  = link_to title, record_path(record_id, search_scope: "local"), target: "_blank"
                - else
                  = title
              - if hold_request.author.present?
                div = hold_request.author
              - if hold_request.call_number.present?
                div = t(".call_number", call_number: hold_request.call_number)

              .mt-2
                = link_to account_hold_request_path(hold_request.id), class: "btn btn-sm btn-danger", data: { turbo_method: :delete } do
                  = t(".delete_hold_request")
  - else
    .card-body
      .alert.alert-info.mb-0.text-center
        = t(".no-hold-requests")
