.card.card-shadowed
  - if @search_request
    .card-header
      = render "stepper"

  .card-body
    = render "searches/record", record: @record, enable_watch_lists_panel: true

    / .d-flex.align-items-center
    /   h3.mb-0 = @record.title
    /   .ms-auto
    /     ruby:
    /       watch_lists_panel_component = WatchListsPanelComponent.new(
    /         user: current_user,
    /         search_scope: current_search_scope,
    /         record_id: @record.id
    /       )
    /     = render(watch_lists_panel_component)

    / - if show_availability?(@record, search_scope: current_search_scope)
    /   div(
    /     data-controller="availabilities"
    /     data-availabilities-url-value=availabilities_path(mode: "badge")
    /   )
    /     div(
    /       data-availabilities-target="record"
    /       data-record-id=@record.id
    /       data-availabilities-enabled
    /     )
    /       div(data-availabilities-output)
    /         i.fas.fa-sm.fa-spinner.fa-pulse

    hr.mb-4

    / ----------------------------------------
    / Record details
    / ----------------------------------------
    .mb-4
      h4 = t(".details.header")
      dl
        dt = t(".details.creators")
        dd = optional_value(@record.creators, default: "–") do |creators|
          - render(CreatorComponent.with_collection(creators))

        dt = t(".details.year_of_publication")
        dd = optional_value(@record.year_of_publication, default: "–")

        dt = t(".details.publication_notices")
        dd = optional_value(@record.publication_notices, default: "–") do |notices|
          - notices.join(", ")

        dt = t(".details.edition")
        dd = optional_value(@record.edition, default: "–")

        = optional_value(@record.physical_description) do |physical_description|
          dt = t(".details.physical_description")
          dd = physical_description

        = optional_value(@record.is_part_of) do |is_part_of|
          dt = t(".details.is_part_of")
          dd
            ul.mb-0
              - is_part_of.each do |p|
                - if p.id.present?
                  - sr = SearchEngine::SearchRequest.parse("sr[q,ids]=#{p.id}")
                  li = link_to new_search_request_path(sr) do
                    = p.label
                - else
                  li = p.label

        = optional_value(@record.source) do |source|
          dt = t(".details.source")
          dd = source.label

        = optional_value(@record.relations) do |relations|
          dt = t(".details.relations")
          dd
            turbo-frame#relations(src=record_relations_path(search_scope: current_search_scope, record_id: @record.id))
              i.fa-solid.fa-spinner.fa-spin

        = optional_value(@record.languages) do |languages|
          dt = t(".details.languages")
          dd = languages.join("; ").upcase

        = optional_value(@record.local_notations) do |local_notation|
          dt = t(".details.local_notations")
          dd = local_notation.join("; ").upcase

        = optional_value(@record.subjects) do |subjects|
          dt = t(".details.subjects")
          dd
            - subjects.each do |subject|
              span.badge.bg-dark.text-light.fw-normal.fs-6.me-1 = subject

        dt = t(".details.identifiers.header")
        dd
          div = "#{t(".details.identifiers.id")}: #{@record.id}"
          = optional_value(@record.aleph_id) do |id|
            div = "#{t(".details.identifiers.aleph_id")}: #{id}"
          = optional_value(@record.hbz_id) do |id|
            div = "#{t(".details.identifiers.hbz_id")}: #{id}"
          = optional_value(@record.zdb_id) do |id|
            div = "ZDB-ID: #{id}"
          - @record.additional_identifiers.each do |id|
            div = "#{t(".details.identifiers.additional.#{id.type.to_s.downcase}", default: id.type.to_s)}: #{id.value}"

        = optional_value(@record.notes) do |notes|
          dt = t(".details.notes")
          dd
            ul.mb-0
              - notes.each do |note|
                li = note

        = optional_value(@record.related_resource_links) do |links|
          dt = t(".details.related_resource_links")
          dd
            ul.mb-0
              - links.each do |link|
                li = link_to link.label, link.url

        = optional_value(@record.fulltext_links) do |links|
          dt = t(".details.fulltext_links")
          dd
            ul.mb-0
              - links.each do |link|
                li = link_to link.url, target: "_blank" do
                  i.fa-solid.fa-external-link
                  =< link.label || "zum Volltext"

        - if @record.resolver_link.present?
          dt = t(".details.resolver_link")
          dd = link_to @record.resolver_link.url, target: "_blank" do
            i.fa-solid.fa-external-link
            =< t("searches.record.online_resource.resolver_link")


    / ----------------------------------------
    / Journal stocks
    / ----------------------------------------
    = optional_value(@record.journal_stocks) do |journal_stocks|
      .mb-4
        h4 = t(".journal_stocks.header")
        table.table
          thead
            tr
              th(scope="col") = t(".journal_stocks.details.call_number")
              th(scope="col") = t(".journal_stocks.details.location")
              th(scope="col") = t(".journal_stocks.details.holdings")
          tbody
            - journal_stocks.each do |stock|
              tr
                td = stock.call_number
                td = stock.location_name
                td
                  = [stock.label_prefix, stock.label].join(" ")
                  - if stock.gap
                    div = t(".journal_stocks.details.gap", gap: stock.gap)
                  - if stock.comments.present?
                    - stock.comments.each do |c|
                      div = c
        em
          i.fa-solid.fa-info-circle
          =< t(".journal_stocks.hint")

    / ----------------------------------------
    / Items
    / ----------------------------------------
    - if current_search_scope == :local && !@record.is_online_resource
      ruby:
        path = record_items_path(
          search_scope: current_search_scope,
          record_id: @record.id,
          host_item_id: @record.host_item_id
        )
      turbo-frame#items(src=path loading="lazy")
        h4 = t(".loading_more")
        = render "table_placeholder"
