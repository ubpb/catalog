ruby:
  non_selected_terms = aggregation.terms.select do |t|
    !search_request.has_aggregation?(aggregation.name, t.term)
  end

  nsr = ->(term, exclude: false) {
    search_request.dup
      .reset_page
      .add_aggregation(
        SearchEngine::SearchRequest::Aggregation.new(
          name: aggregation.name,
          value: term.term,
          exclude: exclude
        )
      )
  }

- if non_selected_terms.present?
  - initial_item_count = 5
  - additional_terms = non_selected_terms[initial_item_count..-1]

  .card.card-primary.mb-3(data-controller="expandable-list" data-expandable-list-item-count-value="#{initial_item_count}")
    .card-header
      = aggregation_label(aggregation)
    .card-body
      ul.list-unstyled.mb-0(data-expandable-list-target="list")
        - non_selected_terms.each do |term|
          li(data-expandable-list-target="item")
            = link_to new_search_request_path(nsr.(term, exclude: false)) do
              = aggregation_value(aggregation, term.term)
            .d-inline-flex.flex-nowrap
              span.ms-1.text-muted = "(#{number_with_precision(term.count, precision: 0, delimiter: ".")})"
              = link_to new_search_request_path(nsr.(term, exclude: true)) do
                span.ms-2: i.fas.fa-times
    - if additional_terms.present?
      .card-footer.py-1
        .fw-normal(data-expandable-list-target="expand")
          a(href="#expand" data-action="click->expandable-list#expand")
            i.fa-solid.fa-angles-down.fa-fw
            = t("searches.aggregations.expand", count: additional_terms.count)
        .fw-normal(data-expandable-list-target="collapse")
          a(href="#collapse" data-action="click->expandable-list#collapse")
            i.fa-solid.fa-angles-up.fa-fw
            = t("searches.aggregations.collapse")

