ruby:
  max_page = total.fdiv(per_page).ceil
  min_page = 1

  page = max_page if page >= max_page
  page = 1        if page <= 0

  has_next_page     = page < max_page
  has_previous_page = page > 1

  next_page     = has_next_page ? page + 1 : page
  previous_page = has_previous_page ? page - 1 : page

  from = page * per_page - per_page + 1
  to   = from + per_page - 1
  to   = total if to >= total

  uri   = Addressable::URI.parse(request.url)
  path  = uri.path  || ""
  query = uri.query || ""

  query = query.gsub(/page=\d+/, "")
  parts = query.split("&").map(&:presence).compact

  first_page_query = (["page=1"] + parts).join("&")
  first_page_path  = "#{path}?#{first_page_query}"

  next_page_query = (["page=#{next_page}"] + parts).join("&")
  next_page_path  = "#{path}?#{next_page_query}"

  previous_page_query = (["page=#{previous_page}"] + parts).join("&")
  previous_page_path  = "#{path}?#{previous_page_query}"

.d-flex.align-items-center
  - spacer_class = (has_previous_page || has_next_page) ? "ms-2" : ""

  .btn-group
    - if has_previous_page || has_next_page
      = link_to previous_page_path, class: "btn btn-primary #{has_previous_page ? '' : 'disabled'}" do
        i.fas.fa-angle-left
    - if has_previous_page || has_next_page
      = link_to next_page_path, class: "btn btn-primary #{has_next_page ? '' : 'disabled'}" do
        i.fas.fa-angle-right

  div(class=spacer_class)
    = link_to first_page_path, class: "text-body" do
      = t(".stats", from: from, to: to, total: total)
