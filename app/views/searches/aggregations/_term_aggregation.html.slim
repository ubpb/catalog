ruby:
  non_selected_terms = aggregation.terms.select do |t|
    !search_request.has_aggregation?(aggregation.name, t.term)
  end

  nsr = ->(term, exclude: false) {
    search_request.dup
      .reset_page
      .add_aggregation(
        SearchEngine::SearchRequest::Aggregation.new(
          name: aggregation.name,
          value: term.term,
          exclude: exclude
        )
      )
  }

- if non_selected_terms.present?
  .card.card-primary.mb-3
    .card-header.cutoff-corner-tr
      = t("searches.aggregations.#{current_search_scope}.#{aggregation.name.underscore}.header", default: aggregation.name)
    .card-body
      div(data-controller="expandable-list")
        ul.list-unstyled.mb-0(data-expandable-list-target="list")
          - non_selected_terms.each do |term|
            li
              = link_to new_search_request_path(nsr.(term, exclude: false)) do
                = t("searches.aggregations.#{current_search_scope}.#{aggregation.name.underscore}.terms.#{term.term.underscore}", default: term.term)
              .d-inline-flex.flex-nowrap
                span.ms-1.text-muted = "(#{term.count})"
                = link_to new_search_request_path(nsr.(term, exclude: true)) do
                  span.ms-2: i.fas.fa-times

        .mt-1.fw-bold(data-expandable-list-target="expand")
          a(href="#expand" data-action="click->expandable-list#expand")
            = t("searches.aggregations.expand")
        .mt-1.fw-bold(data-expandable-list-target="collapse")
          a(href="#collapse" data-action="click->expandable-list#collapse")
            = t("searches.aggregations.collapse")

