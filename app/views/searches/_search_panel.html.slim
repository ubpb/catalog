#search_panel
  .card.card-shadowed
    .card-header.bg-transparent
      ul.nav.nav-tabs.card-header-tabs
        - Config[:search_scopes, default: {}].keys.each do |search_scope|
          - if enabled = Config[:search_scopes, search_scope, :enabled, default: false]
            - active_class = current_search_scope == search_scope ? "active" : "inactive"
            - search_path = current_search_scope == search_scope ? searches_path(search_scope: search_scope) : new_search_request_path(@search_request, search_scope: search_scope)
            li.nav-item
              = link_to search_path, class: "nav-link #{active_class}" do
                = t("searches.#{search_scope}.label", default: "n.n.")

    .card-body
      - flash[:search_panel]&.each do |key, message|
        ruby:
          message_class = case key.to_sym
            when :info  then "callout-info"
            when :error then "callout-danger"
          end
        .callout(class=message_class)
          == message

      = simple_form_for :search_panel, url: searches_path(search_scope: current_search_scope), method: :post do |f|
        div(data-controller="advanced-search")
          template(data-advanced-search-target="template")
            = render "searches/search_field", form: f

          - if @search_request.present?
            - @search_request.queries.each.with_index do |q, i|
              = render "searches/search_field", form: f, query: q
            .d-grid.gap-2.d-md-block
              = f.submit t(".search"), class: "btn btn-primary d-print-none"
          - else # Default search panel
            = render "searches/search_field", form: f, autofocus: true
            .d-grid.gap-2.d-md-block
              = f.submit t(".search"), class: "btn btn-primary d-print-none"
